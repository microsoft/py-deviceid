name: $(Date:yyyyMMdd)$(Rev:.r)

trigger: # cause a pipeline to run whenever you push an update to the specified branches
  batch: true
  branches:
    include:
      - main

parameters:
- name: Publish
  displayName: Push to pypi feed?
  type: boolean
  default: false

variables:
  TeamName: 'Visual Studio Technical Insights'

# The `resources` specify the location and version of the 1ES PT.
resources:
  repositories:
  - repository: MicrobuildTemplate
    type: git
    name: 1ESPipelineTemplates/MicroBuildTemplate
    ref: refs/tags/release

extends:
  # The pipeline extends the 1ES PT which will inject different SDL and compliance tasks.
  # For non-production pipelines, use "Unofficial" as defined below.
  # For productions pipelines, use "Official".
  template: azure-pipelines/MicroBuild.1ES.Official.yml@MicroBuildTemplate
  parameters:
    customBuildTags:
    - Ignore-Tag
    pool:
      name: VSEngSS-MicroBuild2022-1ES
      os: windows  # OS of the image. Allowed values: windows, linux, macOS
    
    stages:
    - stage: BuildAndTest
      jobs:
      - job: BuildAndTest
        displayName: Build And Test

        steps:
        - task: UsePythonVersion@0
          inputs:
            versionSpec: '3.8'
        
        - script: |
            python -m pip install -e $(Build.SourcesDirectory)
            python -m pip install pytest
            python -m pip install  --upgrade build
          displayName: Install prerequisites
 
        - script: | 
            py -m build --outdir $(Build.ArtifactStagingDirectory)\dist
          displayName: Build

        - script: |
            python -m pytest tests
          displayName: Run Tests

        - task: 1ES.PublishPipelineArtifact@1
          inputs:
            targetPath: '$(Build.ArtifactStagingDirectory)'
            artifactName: drop

        - ${{ if parameters.Publish }}:
          - script: |
              echo ##vso[build.addbuildtag]auto-release
            displayName: 'Apply auto-release tag'

        # Because there is no build and no build scanning is enabled, there are no TSA files to upload.
        # Commenting this out for now.
        - task: TSAUpload@2
          inputs:
            GdnPublishTsaOnboard: true
            GdnPublishTsaConfigFile: '$(Build.SourcesDirectory)/.config/TSAOptions.json'
          displayName: 'TSA upload to Codebase (py-deviceid)'
